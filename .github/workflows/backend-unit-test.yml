name: Backend unit test

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

# defaults:
#   run:
#     working-directory: Backend

jobs:
  build:

    runs-on: ubuntu-18.04
    # strategy:
    #   matrix:
    #     python-version: ["3.10"]

    env:
      FLASK_APP: Backend

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    # - name: Install dependencies and set environment
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r Backend/requirements.txt
    - name: Build and run backend
      working-directory: Backend
      run: |
        sudo docker build -t csc510-p1-backend .
        sudo docker run --name con1 -d -p 5000:5000 -t csc510-p1-backend
    - name: Set up Node 16.x
      uses: actions/setup-node@v2
      with:
        node-version: "16.x"
    - name: Generate backend documentation
      run: |
        sudo docker cp con1:app/docs/specgen.json ./Backend/docs/specgen.json
        npx widdershins --search false --language_tabs 'javascript:JavaScript' --summary ./Backend/docs/specgen.json -o ./Backend/docs/apidocs.md
    - name: Check for modified files
      id: git-check
      run: echo ::set-output name=modified::$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)
    - name: Push modifications if they exist
      if: | 
        steps.git-check.outputs.modified == 'true' &&
        github.event_name == 'push' &&
        contains(github.ref, 'main')
      run:  |
        git config user.name "Github Actions"
        git add -A
        git commit -m '[automated commit] add configs generated using jsonnet & GitHub workflow'
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # - name: Run tests
    #   run: |
    #     python test/run_tests.py